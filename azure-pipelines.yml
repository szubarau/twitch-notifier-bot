# .azure/pipelines/azure-pipelines.yml
name: $(Date:yyyyMMdd)$(Rev:.r)
trigger: none  # –û—Ç–∫–ª—é—á–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä—ã, —Ç.–∫. –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ

schedules:
- cron: "*/5 * * * *"  # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–∞—Å—Ç–æ)
  displayName: "Twitch Stream Check"
  branches:
    include: [main]
  always: true  # –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫

variables:
- group: twitch_bot_secrets
- name: PIP_CACHE_DIR
  value: $(Pipeline.Workspace)/.pip-cache

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: StreamMonitor
  timeoutInMinutes: 10  # –õ–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  steps:
  
  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true

  # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  - task: Cache@2
    inputs:
      key: 'pip | "$(Agent.OS)" | requirements.txt'
      path: $(PIP_CACHE_DIR)
      cacheHitVar: 'PIP_CACHE_RESTORED'
  
  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
  - script: |
      pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
    condition: ne(variables.PIP_CACHE_RESTORED, 'true')

  # –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
  - script: |
      python src/main.py >> bot.log 2>&1 &
      sleep 60  # –î–∞–µ–º –±–æ—Ç—É –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
      
      # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—Å–∫–∞
      curl -s -X POST "https://api.telegram.org/bot$(TELEGRAM_BOT_TOKEN)/sendMessage" \
        -d "chat_id=$(TELEGRAM_CHANNEL_ID)" \
        -d "text=üü¢ Pipeline $(Build.BuildNumber) started successfully"
    env:
      TWITCH_CLIENT_ID: $(TWITCH_CLIENT_ID)
      TWITCH_CLIENT_SECRET: $(TWITCH_CLIENT_SECRET)
      TELEGRAM_BOT_TOKEN: $(TELEGRAM_BOT_TOKEN)
      TELEGRAM_CHANNEL_ID: $(TELEGRAM_CHANNEL_ID)
    displayName: 'Run and notify'
    
  # –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
  - script: |
      if [ $(Agent.JobStatus) == "Succeeded" ]; then
        STATUS="üü¢ SUCCESS"
      else
        STATUS="üî¥ FAILED"
        cat bot.log  # –í—ã–≤–æ–¥ –ª–æ–≥–æ–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ
      fi
      
      curl -s -X POST "https://api.telegram.org/bot$(TELEGRAM_BOT_TOKEN)/sendMessage" \
        -d "chat_id=$(TELEGRAM_CHANNEL_ID)" \
        -d "text=$(STATUS) Pipeline $(Build.BuildNumber)
Duration: $(Pipeline.Duration)
Logs: $(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)"
    condition: always()
    displayName: 'Send final status'