# .azure/pipelines/azure-pipelines.yml
name: $(Date:yyyyMMdd)$(Rev:.r)
trigger: none

schedules:
- cron: "*/5 * * * *"
  displayName: "Twitch Stream Check"
  branches:
    include: [main]
  always: true

variables:
- group: twitch_bot_secrets
- name: PIP_CACHE_DIR
  value: $(Pipeline.Workspace)/.pip-cache

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: StreamMonitor
  timeoutInMinutes: 10
  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'
      addToPath: true

  - task: Cache@2
    inputs:
      key: 'pip | "$(Agent.OS)" | requirements.txt'
      path: $(PIP_CACHE_DIR)
      cacheHitVar: 'PIP_CACHE_RESTORED'

  - script: |
      pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
    condition: ne(variables.PIP_CACHE_RESTORED, 'true')

  - script: |
      python src/main.py >> bot.log 2>&1 &
      sleep 60
      
      # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
      MESSAGE="üü¢ Pipeline $(Build.BuildNumber) started successfully"
      curl -s -X POST "https://api.telegram.org/bot$(TELEGRAM_BOT_TOKEN)/sendMessage" \
        -d "chat_id=$(TELEGRAM_CHANNEL_ID)" \
        -d "text=$MESSAGE"
    env:
      TWITCH_CLIENT_ID: $(TWITCH_CLIENT_ID)
      TWITCH_CLIENT_SECRET: $(TWITCH_CLIENT_SECRET)
      TELEGRAM_BOT_TOKEN: $(TELEGRAM_BOT_TOKEN)
      TELEGRAM_CHANNEL_ID: $(TELEGRAM_CHANNEL_ID)
    displayName: 'Run and notify'

  - script: |
      if [ $(Agent.JobStatus) == "Succeeded" ]; then
        STATUS="üü¢ SUCCESS"
      else
        STATUS="üî¥ FAILED"
        cat bot.log
      fi
      
      # –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ —Å \n –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
      MESSAGE="$STATUS Pipeline $(Build.BuildNumber)\nDuration: $(Pipeline.Duration)\nLogs: $(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)"
      curl -s -X POST "https://api.telegram.org/bot$(TELEGRAM_BOT_TOKEN)/sendMessage" \
        -d "chat_id=$(TELEGRAM_CHANNEL_ID)" \
        -d "text=$MESSAGE"
    condition: always()
    displayName: 'Send final status'