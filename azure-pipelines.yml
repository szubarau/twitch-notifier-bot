trigger:
  branches:
    include:
      - main

schedules:
  - cron: "0/15 15-20 * * *"
    displayName: "Evening Stream Check"
    branches:
      include:
        - main
    always: true

variables:
  - group: twitch_bot_secrets

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.9'

  - script: pip install -r requirements.txt
    displayName: 'Install dependencies'

  # üì¶ pip –∫–µ—à (—Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—É—Ç—å)
  - task: Cache@2
    inputs:
      key: 'pip | "$(Agent.OS)" | requirements.txt'
      restoreKeys: pip | "$(Agent.OS)"
      path: $HOME/.cache/pip
    displayName: 'Cache pip dependencies'
    continueOnError: true

  # üì• –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ stream ID
  - task: Cache@2
    inputs:
      key: 'last-stream-id'
      path: stream_cache
      restoreKeys: last-stream-id
    displayName: 'Restore stream ID cache'
    condition: always()
    continueOnError: true

  # üöÄ –ó–∞–ø—É—Å–∫ Twitch Notifier
  - script: |
      PYTHONPATH=src python src/main.py
    displayName: 'Run Twitch Notifier'
    env:
      TWITCH_CLIENT_ID: $(TWITCH_CLIENT_ID)
      TWITCH_CLIENT_SECRET: $(TWITCH_CLIENT_SECRET)
      TELEGRAM_BOT_TOKEN: $(TELEGRAM_BOT_TOKEN)
      TELEGRAM_CHANNEL_ID: $(TELEGRAM_CHANNEL_ID)

  # ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è stream ID
  - script: |
      if [ -f stream_cache/last_stream_id.txt ]; then
        echo "‚úÖ stream ID –Ω–∞–π–¥–µ–Ω ‚Äî –∫–µ—à –æ–±–Ω–æ–≤–∏–º"
        echo "##vso[task.setvariable variable=stream_id_exists]true"
      else
        echo "‚ö†Ô∏è stream ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –∫–µ—à –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ–º"
        echo "##vso[task.setvariable variable=stream_id_exists]false"
      fi
    displayName: 'Check stream ID file'

  # üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ stream ID
  - task: Cache@2
    condition: eq(variables['stream_id_exists'], 'true')
    inputs:
      key: 'last-stream-id'
      path: stream_cache
    displayName: 'Update stream ID cache'


